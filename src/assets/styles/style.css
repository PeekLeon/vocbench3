@import url('./custom_bootstrap/css/bootstrap.min.css');

html, body {
    height: 100%;
    margin: 0;
}

.blockingDivHost {
    position: relative; /* to allow blockDiv with absolute position inside these divs */
}

/* Div visible only in some scenario when there is need to block event from user */
.blockingDiv {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 2000; /* Blocking div z-index > of .modal z-index (1000+) */
    text-align: center;
    color: black;
    font-size: 13px;
}
.blockingDiv > .loadingDiv {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 140px;
    height: 100px;
    transform: translate(-50%, -50%);
    border: 1px solid #ddd;
    background: linear-gradient(#FFFFFF, #CACACA);
}

.blockingDiv > .loadingDiv > div {
    position: absolute;
    top: 50%;
    left: 50%;
    margin-right: -50%;
    transform: translate(-50%, -50%)
}

app {
    height: 100%;
    display: flex;
    flex-flow: column;
}

li.disabled {
    cursor: not-allowed;    
}

/*Disable events when user clicks on a disabled link*/
li.disabled > a {
    pointer-events: none;
}

config-bar {
    background: linear-gradient(#FFFFFF, #CACACA);
    padding-top: 3px;
    padding-bottom: 3px;
}

.bottom-bar {
    background: linear-gradient(#95A5BC, #7180AB);
    border-top: 1px solid #C5D5E4;
    color: white;
    padding: 2px 20px;    
}

.bottom-bar a {
    text-decoration: none;
    color: white
}

/* To style component that take place in main router outlet */
.pageComponent {
    flex: 1;
    min-height: 0;
    display: flex;
    overflow-y: hidden;
}

.vbox {
    display: flex;
    flex-flow: column;
    flex: 1;
    min-height: 0;
    min-width: 0;
}

.hbox {
    display: flex;
    flex-flow: row;
    flex: 1;
    min-height: 0;
    min-width: 0;
}

resource-view-panel {
    display: flex;
}

resource-view-splitted, resource-view-tabbed {
    display: flex;
    flex: 1;
}

tree-panel, resource-list, class-individual-tree, resource-view, scheme-selection, data-range-editor, import-tree {
    display: flex;
    flex: 1;
    min-height: 0;
    flex-flow: column;
}

/* Note: in order to work, the div with this class needs to be placed into a display:flex container */
.scrollableContainer {
    padding: 4px;
    overflow: auto;
    flex: 1;
    min-height: 0;
    display: flex;
    flex-flow: column;
}

rdf-resource {
    min-height: 16px;
    display: inline-flex;
    align-items: center;
    border-radius: 2px;
}
rdf-resource > .rdfResourceIcon {
    width: 16px;
    height: 16px;
    margin-right: 5px;
}
/* Ellipsis of the content of a rdf-resource in a button, in a navigation tab (ResView tabs), and in a panel-heading (heading of ResView) */
button > rdf-resource > span, .nav-tabs rdf-resource > span, .panel-heading rdf-resource > span, graph-panel td > rdf-resource > span {
	max-width: 200px;
	overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

.stagingAdd {
    color: green; font-style: italic;
}

.stagingRemove {
    color: darkred;
    text-decoration: line-through; 
}

.flagIcon {
    position: relative;
}
.flagIcon > span{
    position: absolute;
    top: 1px;
    left: 0px;
    width: 16px;
    margin: 0 auto;
    font-family: monospace;
    font-weight: bold;
    font-size: 10px;
    cursor: default;
    user-select: none;
    white-space: nowrap;
    overflow: hidden;
    text-align: center;
}

.treeListComponent {
    /* vbox + blockingDivHost */
    display: flex;
    flex-flow: column;
    flex: 1;
    min-height: 0;
    min-width: 0;
    position: relative;
}

.treeListComponent .panel-body {
    padding: 0px;
}

.treeListComponent rdf-resource:hover {
    background-color: #e5f3ff;
}

reified-resource {
    /* negative margins to remove the 3px padding of listItem (container of reified-resource) */
    margin: -2px 10px -2px -3px;
}

editable-resource {
    display: flex;
}

.expandableResource {
    border: 1px solid #ccc;
    border-radius: 2px;
    background-color: #eee;
    min-height: 16px;
    padding: 2px 3px;
}

.selectedResource {
    background-color: #cde8ff !important;
    border: 1px solid #7bc3ff !important;
}

.treeNode {
    min-height: 24px;
    margin: 2px 0px;
    display: flex;
    align-items: center;
    position: relative; /* for positioning 'absolute' children (instNum label in classTreeNode) */
}
.treeNode .expandCollapseBtnContainer {
    min-width: 16px;
}
.treeNode rdf-resource {
    flex: 1;
    min-height: 24px;
}

.expandCollapseBtnContainer > img {
    cursor: pointer;
}

.subTree {
	padding-left:15px;
}

.listNodeItem {
    display: flex;
    align-items: center;
    min-height: 24px;
}

.listNodeItem input {
    min-width: 13px;
}

.listNodeItem rdf-resource {
	border-radius: 2px;
	flex: 1;
}

input[type="image"]:disabled  {
	opacity: 0.5;
}

img.disabled  {
	opacity: 0.5;
}

/* table which rows are colored when hovered */
.table-hoverable tbody tr:hover td { 
    background-color: #e5f3ff !important;
}
/*project-component .table tr.active td {*/
.table tr.active td {
    background-color: #cde8ff !important;
}

.table-borderless tbody tr td, .table-borderless tbody tr th, .table-borderless thead tr th {
    border: none;
}

.listItem {
    padding: 3px;
    width: 100%;
    min-height: 24px;
    display: flex;
    align-items: center;
}
.listItem:hover {
    background-color: #e5f3ff;
}
.listItem.active {
    background-color: #cde8ff;
}

.listItem rdf-resource {
	border-radius: 2px;
	flex: 1;
}

.listItem.disabled {
    cursor: not-allowed;
    color: #999;
}

.subPanel {
	border: 1px solid #ddd;
	border-radius: 4px;
	margin-bottom: 5px;
}
.subPanel-heading {
    display: flex;
    align-items: center;
    background: linear-gradient(#fff, #eee);
    padding: 4px 8px;
    border-bottom: 1px solid #ccc;
    min-height: 30px;
}
.subPanel-body {
	padding: 4px;
}
.subPanel-footer {
    padding: 4px;
    background-color: #f5f5f5;
    border-top: 1px solid #ddd;
    border-bottom-right-radius: 3px;
    border-bottom-left-radius: 3px;
}

.groupPanel {
    border: 1px solid #aaa;
    border-radius: 4px;
    margin: 8px 0 5px;
    position: relative;
}
.groupPanel-heading {
    display: flex;
    align-items: center;
    position: absolute;
    height: 20px;
    top: -11px;
    left: 4px;
    right: 8px;
}
.groupPanel-heading .groupPanel-heading-content {
    /* labels, buttons, or other elements that should be placed on the heading*/
    padding: 0px 2px;
    background: white;
}
.groupPanel-add-btn {
    position: absolute; top: -2px; right: 12px;
}
.groupPanel-dropdown-btn {
    position: absolute; top: 0px; right: -2px;
}
.groupPanel-body {
    padding: 12px 4px 4px;
}

.panelButtonImg {
    width: 20px;
    height: 20px;
}

input.ng-invalid.submitted {
    border-left: 4px solid #a94442;
}
input.invalid {
    background: #ffaaaa;
}

/*Removes spinner from input type number (I'm not sure if show or not the spinner, keep it commented for now)*/
/*input[type=number]::-webkit-inner-spin-button, 
input[type=number]::-webkit-outer-spin-button { 
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    margin: 0; 
}*/

/* apply bootstrap style to input of type "file" */
.btn-file {
    position: relative;
    overflow: hidden;
}
.btn-file input[type=file] {
    position: absolute;
    top: 0;
    right: 0;
    min-width: 100%;
    min-height: 100%;
    font-size: 100px;
    text-align: right;
    filter: alpha(opacity=0);
    opacity: 0;
    outline: none;
    background: white;
    cursor: inherit;
    display: block;
}

/**
 * Progress bars text in Bootstrap are centered according the progress bar, not the "background" bar. This classes fix.
 */
.progress {
    position: relative;
    margin-bottom: 0;
    background-color: #d9534f;
}
.progress > .progress-bar > .progress-value {
    position: absolute;
    display: block;
    width: 100%;
    color: white;
    white-space: nowrap;
}
.large-progress {
    min-width: 130px;
}
 
codemirror {
    display: flex;
    flex: 1;
}
codemirror .CodeMirror { 
    border: 1px solid #ddd; /*Border of textare of CodeMirror (just in codemirror, because in yasqe there is already)*/
    height: auto !important; 
    flex: 1;
}
codemirror .CodeMirror-scroll {
    min-height: 100px;
    margin-right: 0px;
    flex: 1;
}
textarea.disabled + .CodeMirror {
    background: #eee;
}

.cm-s-default .cm-variable-4 { color: #c00 }

/*Limit height of codemirror to 40% of viewport*/ 
sparql-component .CodeMirror { height: 35vh !important }
/*Reset height to auto when codemirror is fullscreen*/
.CodeMirror.CodeMirror-fullscreen { height: auto !important }
/*To put codemirror in fullscreen in front of the menubar (default z-index 7 made the textarea behind the navbar)*/
.yasqe .CodeMirror-fullscreen { z-index: 999 !important; }
/* Reposition the fullscreen button */
.yasqe .yasqe_buttons { top: 5px; } 
/* To hide fullscreen button when yasqe is in readonly mode */
.yasqe-hide-btns .yasqe_buttons { display: none; }

/* Btn groups in panel heading (usually button for tree/list managment) */
.panel-heading .btn-group-xs>.btn {
    padding: 1px 3px;
}

/* Button to add/remove elements in ResourceView partitions */
.transparentBtn:hover, .transparentBtn:focus {
	color: #000000;
	text-decoration: none;
	cursor: pointer;
	opacity: 0.9;
	filter: alpha(opacity=90);
}
button.transparentBtn {
    width: 18px;
    height: 18px;
    float: right;
    font-size: 16.5px;
	font-weight: bold;
	line-height: 1;
	color: #000000;
	text-shadow: 0 1px 0 #ffffff;
	opacity: 0.4;
	filter: alpha(opacity=40);
	padding: 0;
	cursor: pointer;
	background: transparent;
	border: 0;
    -webkit-appearance: none;
    appearance: none;
}
button.transparentBtn:disabled  {
	opacity: 0.2;
    filter: alpha(opacity=20);
    cursor: default;
}

button.predObjRenderPanelBtn {
    color: #000000;
	opacity: 0.5;
    filter: alpha(opacity=50);
    line-height: 1;
}
button.predObjRenderPanelBtn:disabled {
    opacity: 0.2;
    filter: alpha(opacity=20);
    cursor: default;
}
button.predObjRenderPanelBtn:hover:enabled, button.predObjRenderPanelBtn:focus:enabled {
    color: #000000;
	opacity: 0.9;
    filter: alpha(opacity=90);
    cursor: pointer;
}

button.resViewPartitionAddBtn {
    filter: alpha(opacity=40);
    padding: 0;
    cursor: pointer;
    background: transparent;
    border: 0;
    -webkit-appearance: none;
    appearance: none;
}
button.resViewPartitionAddBtn:disabled  {
	opacity: 0.2;
    filter: alpha(opacity=20);
    cursor: default;
}

.greyText {
    color: #999;
}

/*override padding of the nav-tab links*/
.nav-tabs-xs>li>a {
    cursor: pointer !important;
    padding: 1px 2px !important;
}

/* html hidden attribute doesn't work with flex-box, use this class instead */
.hidden {
    display: none;
}

.sliderY, .sliderX {
    display: flex;
    justify-content: center;
    margin: 2px;
    padding: 3px;
    border-radius: 3px;
}
.sliderY {
    cursor: ns-resize;
}
.sliderX {
    cursor: ew-resize;
}
.sliderY:hover, .sliderX:hover {
    background-color: #dddddd;
}
.sliderY div, .sliderX div {
    align-self: center;
    opacity: 0.4;
	filter: alpha(opacity=40);
}
.sliderY:hover div, .sliderY:hover div {
    opacity: 0.9;
    filter: alpha(opacity=90);
}

/* To avoid strange style behaviour (e.g. horizontal scrollbar in createProjectComponent)*/
.form-horizontal .form-group {
    margin-left: -4px;
    margin-right: -4px;
}

/* To apply to the arrow.png image (that points down) in order to change orientation*/
.arrow-left {
    transform: rotate(90deg);
}
.arrow-up {
    transform: rotate(180deg);
}
.arrow-right {
    transform: rotate(270deg);
}

.clickable:hover {
    cursor: pointer;
}

lang-pref {
    display: flex;
    flex: 1;
}

/* Limit the dropdown size of ng2-completer */
.completer-dropdown {
    overflow-y: auto;
    overflow-x: hidden;
    max-height: 140px !important;
    bottom: 18px;
    border-color: #ddd !important;
}
ng2-completer {
    position: relative;
}
.matchClass { color: teal; font-weight: bold; }

/* Fix for a bug in Firefox that adds an additional row to a textarea
see https://stackoverflow.com/questions/46746887/textarea-extra-row-in-firefox-browser */
textarea {
    overflow-x: hidden
}

.avatarContainer {
    background-size:cover;
    background-position:50% 50%;
    border-radius: 4px;
}

.tile-group { 
    min-height: 28px;
    border: 1px solid #ccc;
    border-radius: 3px;
    background-color: #eee;
    flex-wrap: wrap;
}

.tile { 
    border: 1px solid #ccc;
    border-radius: 3px;
    padding: 3px;
    background: #fff;
    margin: 2px; 
}

/* class to add to input-sm in order to create a container (similar to a form-control) for a rdf-resource */
.input-resource {
    border: 1px solid #ccc;
    background-color: #eee;
    padding: 2px 10px;
    min-height: 28px; /* height of input-sm. Override if this class is used with a different input- size */
    max-height: 140px;
    height: initial; /* override the height of the input-sm */
    overflow: auto;
}

/* ####################################
########## BOOTSTRAP OVERRIDE #########
#####################################*/

/* .glyphicon {
    line-height: 1.5;
} */

nav {
    font-size: 12px;
}

.navbar-static-top {
    z-index: 999;
    border: 0;
}

.navbar-brand {
    font-size: 18px;
}

.navbar-nav>li>a {
    margin: 0px 1px;
}

.table {
    font-size: inherit;
    margin-bottom: 0px;
}

.table>tbody>tr>td, .table>tbody>tr>th, .table>tfoot>tr>td, .table>tfoot>tr>th, .table>thead>tr>td, .table>thead>tr>th {
    vertical-align: middle;
}

.table > tbody > tr:first-child > td {
    border-top: none;
}

.panel { margin-bottom: 0px; }
.panel-heading {
    display: flex;
    align-items: center;
    min-height: 30px;
    background: linear-gradient(#FFFFFF, #CACACA);
    border-color: #BFBFBF;
}

label { margin-bottom: 0px; }

input[type="radio"], input[type="checkbox"] {
    margin: 0px;
}

.tab-content, .tab-content > tab.active {
    flex: 1;
    display: flex;
    flex-flow: column;
    min-height: 0px;
    border: 1px solid #ddd;
    border-top-color: transparent;
    padding: 8px;
}

.dropdown-menu>li>a {
    padding: 3px 10px;
}

.alert {
    margin-bottom: 0px;
}

/*not available in bootstrap*/
.input-xs {
    height: 20px;
    padding: 1px 5px;
    font-size: 10px;
    line-height: 1.5;
    border-radius: 3px;
}
.input-group-xs>.form-control,
.input-group-xs>.input-group-addon,
.input-group-xs>.input-group-btn>.btn {
    height: 20px;
    padding: 1px 5px;
    font-size: 10px;
    line-height: 1.5;
}

/*if a element has (click) instead of href doesn't show pointer cursor. This css rule fixes it*/
.dropdown-menu a:hover {
    cursor: pointer
}

.dropdown-menu .divider {
    margin: 2px 0px;
}

.nav-tabs>li>a {
    padding: 4px 8px;
    background-color: #eee;
    border: 1px solid #ddd;
    cursor: default;
}
.nav-tabs>li>a>.glyphicon {/*To avoid to stretch the tab when there is a glyphicon in the link*/
    line-height: 1.0;
}

.modal-title {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

@media (min-width: 768px) {
    .modal-xl {
        width: 90%;
        max-width:1200px;
    }
}